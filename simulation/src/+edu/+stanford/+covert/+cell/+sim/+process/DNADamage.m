%DNA Damage
%
% @wholeCellModelID Process_DNADamage
% @name             DNA Damage
% @description
%   Biology
%   ======================
%   Simulates a spectrum of DNA lesions repaired by base excision repair,
%   nucleotide excision repair, and homologous recombination repair:
%   - DNA strand breaks: caused by
%     - hydrolysis and beta-elimination of abasic sites
%     - ionizing radiation (alpha, beta particles, protons, electrons,
%       gamma rays)
%   - Spontaneous base loss
%   - Base damage: caused by
%     - Spontaneous deamination
%     - oxidation -- oxygen radicals generated by metabolism, ionizing radiation, chemicals
%     - alkylation -- carbon radicals generated by metabolism, ionizing radiation, chemicals
%     - amination -- nitrogen radicals generated by metabolism, ionizing radiation, chemicals
%   - Intrastrand cross links: caused by
%     - UV-B induced cyclization
%
%   The simulation does not consider the following types of DNA damage
%   - interstrand cross links: caused by bifunctional akylating agents
%   - psoralens
%   - DNA-protein cross links
%   - Sugar-phosphate damage other than strand breaks
%
%   Additionally, the simulation does not consider mutiple damages per
%   base or sugar-phosphate.
%
%   Categorizes strand breaks in DNA segments (216 bases) according to
%   scheme described in the track structure model literature [PUB_0486]:
%   - NB     -- no strand break
%   - SSB    -- single strand break
%   - SSB+   -- multiple single strand breaks on segment all on same strand
%   - 2SSB   -- single strand breaks on both strand separated by at least 10 bases on DNA segment
%   - DSB    -- two single strand breaks on opposite strands within 10 bases
%   - DSB+   -- double strand break with additional strand break on DNA segment
%   - DSB++  -- two single strand breaks on same DNA segment
%
%   Effect of DNA damage on physiology
%   ++++++++++++++++++++++
%   The exact effect of DNA damage on physiology is not well characterized.
%   Certain kinds of damage are believed to arrest transcription
%   [PUB_0780]. Tornaletti and Hanawalt provide the most extensive review
%   of the effect of specific damages on transcription [PUB_0781, PUB_0782,
%   PUB_0783]. For simplicity we we model all damages (except m6AD involved
%   in R/M systems) as barriers to protein binding and function. This is
%   implemented with the chromosome state class.
%
%   Knowledge Base
%   ======================
%   As of 8/12/2010 the M. genitalium knowledge contained the stochiometry
%   and kinetics of 128 DNA damage reactions involving 15 damaging agents
%   and 9 spontaneous reactions. These reactions were compiled from
%   several sources. The rates of the most frequent types of damage are
%   listed below.
%
%      Type                                            Reactions
%      ============================================    =========
%      base alkylation                                   7
%      base amination                                    3
%      base ethylation                                  39
%      base glucosyl transfer                            2
%      base methylation                                 42
%      base reduction                                    1
%      photooxidation                                    2
%      radiation (gamma-ray) induced base oxidation     19
%      spontaneous base deamination                      4
%      spontaneous base loss                             4
%      strand break                                      2
%      UV-B photodimerization                           12
%
%      Damaging agent                                  Reactions
%      ============================================    =========
%      butylene glycol                                   1
%      CH3                                               4
%      chloroethylene oxide                              5
%      DES                                              13
%      EMS                                              13
%      ENU                                              13
%      Gamma radiation                                   1
%      hydrogen radical                                  1
%      hydroxyl radical                                 19
%      MMS                                               9
%      MMSO4                                             7
%      MNNG                                             10
%      MNU                                              12
%      NH3                                               1
%      Spontaneous                                       9
%      UVB radiation                                    14
%
%      Damage                          Spec Rate             Rate (1/s)   No (1/Cycle)
%      ============================    ===================   ==========   ============
%      Spontaneous base deamination    1.1e-12 1/nt/s        1.4e-06      0.1
%      Spontaneous base loss           7.2e-11 1/nt/s        8.4e-05      7.8
%      UV-B Dimer                      1.2e-07 1/nt/(J/m^2)  6.0e-01      5.6e4
%      \gamma-ray base oxidation       5.2e-07 1/nt/Gy       1.7e-11      1.6e-6
%      \gamma-ray strand break         1.7e-07 1/nt/Gy       5.6e-12      5.2e-7
%      base alkylation                 ?                     ?            ?
%      base amination                  ?                     ?            ?
%      base ethylation                 ?                     ?            ?
%      base glucosyl transfer          ?                     ?            ?
%      base methylation                ?                     ?            ?
%      base reduction                  ?                     ?            ?
%      photooxidation                  ?                     ?            ?
%
%   Representation
%   ======================
%   7 properties are used to keep track of the damage state of DNA. The first
%   dimension of each has length equal to that of the chromosome.
%   - gapSites                  true/false    sugar gaps
%   - abasicSites               true/false    abasic sites
%   - damagedSugarPhosphates    enumeration   damaged sugar phosphates
%   - damagedBases              enumeration   damaged bases
%   - intrastrandCrossLinks     true/false    intrastand cross link
%   - strandBreaks              true/false    strand break (missing sugar-phosphate bond)
%   - hollidayJunctions         true/false    holliday junction
%
%   substrates represents the amounts of free metabolites. initializeConstants
%   synchronizes the substrates of this process with that of the DNA repair
%   process to make it easy for these processes to communicate. That is
%   initializeConstants sets the substrates of both processes equal to the union
%   of the two, are orders the substrates the same in both processes. Thus
%   substrate indices defined in process are valid on properties received from
%   the other process, and it is unecessary to remap properties in
%   copyFromState.
%
%   stimuli represents the amounts of DNA damaging agents including several
%   kinds of radiation.
%
%   This process uses three properties rather than reactionStoichiometryMatrix
%   to represent DNA damaging reactions and the DNA, damaging agents, and free
%   metabolites that participate in them. These three matrices are a
%   factorization of the super class reactionStoichiometryMatrix property.
%   - reactionSmallMoleculeStoichiometryMatrix: the stochiometry of free
%     metabolites in damage reactions
%   - reactionDNAStoichiometryMatrix: the stoichiometry of DNA bases in
%     damage reactions
%   - reactionRadiationStoichiometryMatrix: the stoichiometry of radiation
%     stimuli in damage reactions
%
%   This process uses reactionVulnerableMotifs, rather the super class
%   reactionModificationMatrix property to represent the affects of the DNA
%   damage reaction on macromolecules. reactionVulnerableMotifs represents the DNA
%   sequence(s) vulnerable to each damage reaction.
%
%   Initialization
%   ======================
%   The DNA is initialized to the undamaged state, except that MunI
%   restriction/modification sites are initialized to the methylated state (see
%   DNA Repair process).
%
%   Simulation
%   ======================
%   For each reaction
%     1. Compute rate that individual vulnerable DNA regions succombs to damage
%     2. Randomly select among vulnerable DNA regions at rate computed in step
%        (1)
%     3. Mark DNA selected in step (2) as damaged by updating gapSites,
%        abasicSites, damagedSugarPhosphates, damagedBases,
%        intrastrandCrossLinks, strandBreaks, and hollidayJunctions
%     4. Decrement/increment free metabolites reaction reactants and products
%        using reactionSmallMoleculeStoichiometryMatrix
%   end
%
%   References
%   ======================
%   1. Errol C Friedberg, Graham C Walker, and Wolfram Siede (1995). DNA
%      Repair and Mutagenesis. ASM Press: Washington, DC. [PUB_0461]
%   2. Nikjoo H, O'Neill P, Goodhead DT, and Terrissol M. Computational
%      modelling of low-energy electron-induced DNA damage by  early physical
%      and chemical events (1997). Int J Radiat Biol. 71(5): 467-83.
%      [PUB_0486]
%   3. Cline SD, Hanawalt PC (2003). Who's on first in the cellular
%      response to DNA damage? Nat Rev Mol Cell Biol. 4(5):361-72.
%      [PUB_0780]
%   4. Tornaletti S (2005). Transcription arrest at DNA damage sites. Mutat
%      Res. 577(1-2):131-45. [PUB_0781]
%   5. Tornaletti S	(2009). Transcription-coupled DNA repair: directing
%      your effort where it's most needed. Cell Mol Life Sci.
%      66(6):1010-20. [PUB_0782]
%   6. Tornaletti S, Hanawalt PC (1999). Effect of DNA lesions on
%      transcription elongation. Biochimie. 81 (1-2):139-46. [PUB_0783] 
%
% Author: Jonathan Karr, jkarr@stanford.edu
% Affilitation: Covert Lab, Department of Bioengineering, Stanford University
% Last updated: 4/25/2010
classdef  DNADamage < edu.stanford.covert.cell.sim.ReactionProcess & edu.stanford.covert.cell.sim.ChromosomeProcessAspect
    %property annotations
    properties (Constant)
        optionNames__              = {}; %names of option properties
        fixedConstantNames__       = {   %names of fixed constant properties
            'reactionVulnerableMotifs';
            'reactionVulnerableMotifTypes';
            'reactionDamageTypes';
            'reactionSmallMoleculeStoichiometryMatrix';
            'reactionDNAStoichiometryMatrix';
            'reactionRadiationStoichiometryMatrix';
            'reactionDNAProduct';
            'reactionRadiation';
            };
        fittedConstantNames__      = {}; %names of fitted constant properties
        localStateNames__          = {}; %names of simulation state properties redundant with timecourses in this or other processes or the simulation
    end
    
    %enumerations
    properties (Constant)
        unmodifiedNucleobases = 'ACGT';           %symbols for unmodified bases
    end
    
    %IDs, names, and local indices
    properties
        substrateIndexs_radiation                 %indices within substrates of radiation
        substrateIndexs_hydrogen                  %index within substrates of hydrogen
        substrateIndexs_hydroxylRadical           %index within substrates of hydroxyl radical
        substrateIndexs_water                     %index within substrates of water
        substrateIndexs_DR5P                      %index within substrates of deoxyribose-5-phosphate
        substrateIndexs_dRibose5P_dRibose5P       %index within substrates of (deoxyribose-5-phosphate)-(deoxyribose-5-phosphate)
        substrateIndexs_unmodifiedNucleobases     %indices within substrates of unmodified nucleobases
        substrateIndexs_unmodifiedNucleosides     %indices within substrates of unmodified deoxyribonucleosides
        substrateIndexs_unmodifiedDNMPs           %indices within substrates of unmodified dNMPs
        substrateIndexs_modifiedNucleobases       %indices within substrates of modified nucleobase
        substrateIndexs_modifiedNucleosides       %indices within substrates of modified deoxyribonucleoside
        substrateIndexs_modifiedDNMPs             %indices within substrates of modified dNMPs
        
        reactionIndexs_spontaneousBaseLoss        %index within reactions of spontaneous base loss
        reactionIndexs_spontaneousBaseDeamination %index within reactions of spontaneous base deamination
        reactionIndexs_gammaRayBaseOxidation      %index within reactions of gamma ray base oxidation
        reactionIndexs_uvbDimerization            %index within reactions of UVB dimerization
        reactionIndexs_baseReduction              %index within reactions of base reduction
        reactionIndexs_baseAmination              %index within reactions of base amination
        reactionIndexs_baseGlucosylTransfer       %index within reactions of base glucosyl transfer
        reactionIndexs_baseAlkylation             %index within reactions of base alkylation
        reactionIndexs_baseEthylation             %index within reactions of base ethylation
        reactionIndexs_baseMethylation            %index within reactions of base methylation
        reactionIndexs_photooxidation             %index within reactions of photooxidation
        reactionIndexs_strandBreak                %index within reactions of strand break
    end
    
    %fixed biological constants
    properties
        reactionVulnerableMotifs                 %DNA base sequence / damaged bases / sugar-phosphate subject to each damage reaction
        reactionVulnerableMotifTypes             %type of each reactionVulnerableMotif (sequence, gapSites, abasicSites, damagedSugarPhosphates, damagedBases, intrastrandCrossLinks, strandBreaks, or hollidayJunctions)
        reactionDamageTypes                      %type of damage of reach reaction (gapSites, abasicSites, damagedSugarPhosphates, damagedBases, intrastrandCrossLinks, strandBreaks, or hollidayJunctions)
        reactionSmallMoleculeStoichiometryMatrix %small molecule stoichiometry of reactions
        reactionDNAStoichiometryMatrix           %DNA base stoichiometry of reactions
        reactionRadiationStoichiometryMatrix     %DNA radiation stoichiometry of reactions
        reactionDNAProduct                       %global index of resultant DNA product of each reaction
        reactionRadiation                        %local index of radiation causative of each reaction
    end
    
    %constructor
    methods
        function this = DNADamage(wholeCellModelID, name)
            this = this@edu.stanford.covert.cell.sim.ReactionProcess(wholeCellModelID, name);
        end
    end
    
    %communication between process/simulation
    methods
        %set references to state objects
        function storeObjectReferences(this, simulation)
            this.storeObjectReferences@edu.stanford.covert.cell.sim.Process(simulation);
            this.storeObjectReferences@edu.stanford.covert.cell.sim.ChromosomeProcessAspect(simulation);
        end
        
        %initialize constants
        function initializeConstants(this, knowledgeBase, simulation, varargin)
            %% call super class method to get reactions, substrates, and enzymes
            this.initializeConstants@edu.stanford.covert.cell.sim.ReactionProcess(knowledgeBase, simulation, varargin{:});
            this.initializeConstants@edu.stanford.covert.cell.sim.ChromosomeProcessAspect(knowledgeBase, simulation, varargin{:});
            
            %% remove reactions with zero rate
            this.initializeConstants_overrideReactions(simulation, this.reactionWholeCellModelIDs(this.reactionBounds(:, 2) ~= 0));
            
            %% additional substrates
            substrateWholeCellModelIDs  = unique([
                this.substrateWholeCellModelIDs;
                'DA'; 'DC'; 'DG'; 'DT']);
            this.initializeConstants_overrideSubstrates(substrateWholeCellModelIDs);
            
            %% substrate indices
            this.substrateIndexs_radiation             = this.substrateIndexs({'UVB_radiation';'gamma_radiation'});
            this.substrateIndexs_hydrogen              = this.substrateIndexs({'H'});
            this.substrateIndexs_hydroxylRadical       = this.substrateIndexs({'hydroxyl_radical'});
            this.substrateIndexs_water                 = this.substrateIndexs({'H2O'});
            this.substrateIndexs_DR5P                  = this.substrateIndexs({'DR5P'});
            this.substrateIndexs_dRibose5P_dRibose5P   = this.substrateIndexs({'dRibose5P_dRibose5P'});
            this.substrateIndexs_unmodifiedNucleobases = this.substrateIndexs({'AD';'CSN';'GN';'THY'});
            this.substrateIndexs_unmodifiedNucleosides = this.substrateIndexs({'DA';'DC';'DG';'DT'});
            this.substrateIndexs_unmodifiedDNMPs       = this.substrateIndexs({'DAMP';'DCMP';'DGMP';'DTMP'});
            this.substrateIndexs_modifiedNucleobases   = this.substrateMetaboliteLocalIndexs(...
                strcmp({knowledgeBase.metabolites(this.substrateMetaboliteGlobalIndexs).category},'modified nucleobase') | ...
                strcmp({knowledgeBase.metabolites(this.substrateMetaboliteGlobalIndexs).wholeCellModelID},'URA'));
            this.substrateIndexs_modifiedNucleosides   = this.substrateMetaboliteLocalIndexs(...
                strcmp({knowledgeBase.metabolites(this.substrateMetaboliteGlobalIndexs).category},'modified deoxyribonucleoside') | ...
                strcmp({knowledgeBase.metabolites(this.substrateMetaboliteGlobalIndexs).wholeCellModelID},'URI'));
            this.substrateIndexs_modifiedDNMPs         = this.substrateMetaboliteLocalIndexs(...
                strcmp({knowledgeBase.metabolites(this.substrateMetaboliteGlobalIndexs).category},'modified deoxyribonucleotide monophosphate') | ...
                strcmp({knowledgeBase.metabolites(this.substrateMetaboliteGlobalIndexs).wholeCellModelID},'DUMP'));
            
            %% reaction indices
            this.reactionIndexs_spontaneousBaseLoss        = find(strcmp(this.reactionTypes,'spontaneous base loss'));
            this.reactionIndexs_spontaneousBaseDeamination = find(strcmp(this.reactionTypes,'spontaneous base deamination'));
            this.reactionIndexs_gammaRayBaseOxidation      = find(strcmp(this.reactionTypes,'radiation (gamma-ray) induced base oxidation'));
            this.reactionIndexs_uvbDimerization            = find(strcmp(this.reactionTypes,'UV-B photodimerization'));
            this.reactionIndexs_strandBreak                = find(strcmp(this.reactionTypes,'strand break'));
            this.reactionIndexs_baseReduction              = find(strcmp(this.reactionTypes,'base reduction'));
            this.reactionIndexs_baseAmination              = find(strcmp(this.reactionTypes,'base amination'));
            this.reactionIndexs_baseGlucosylTransfer       = find(strcmp(this.reactionTypes,'base glucosyl transfer'));
            this.reactionIndexs_baseAlkylation             = find(strcmp(this.reactionTypes,'base alkylation'));
            this.reactionIndexs_baseEthylation             = find(strcmp(this.reactionTypes,'base ethylation'));
            this.reactionIndexs_baseMethylation            = find(strcmp(this.reactionTypes,'base methylation'));
            this.reactionIndexs_photooxidation             = find(strcmp(this.reactionTypes,'photooxidation'));
            
            %% reaction types
            this.reactionDamageTypes = cell(size(this.reactionWholeCellModelIDs));
            this.reactionDamageTypes(this.reactionIndexs_spontaneousBaseLoss)        = {'abasicSites'};
            this.reactionDamageTypes(this.reactionIndexs_spontaneousBaseDeamination) = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_gammaRayBaseOxidation)      = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_uvbDimerization)            = {'intrastrandCrossLinks'};
            this.reactionDamageTypes(this.reactionIndexs_strandBreak)                = {'strandBreaks'};
            this.reactionDamageTypes(this.reactionIndexs_baseReduction)              = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_baseAmination)              = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_baseGlucosylTransfer)       = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_baseAlkylation)             = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_baseEthylation)             = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_baseMethylation)            = {'damagedBases'};
            this.reactionDamageTypes(this.reactionIndexs_photooxidation)             = {'damagedBases'};
            
            %% Reaction stoichiometry matrices
            %Factor reactionStoichiometryMatrix property into 3 parts
            %- reactionSmallMoleculeStoichiometryMatrix: the stochiometry of
            %  free metabolites in damage reactions. Since we don't have an
            %  explicit model of the production and amount of hydroxyl
            %  radicals, and the rate of hydroxyl radical production from
            %  water using radiation is implicit in the rate of the damage
            %  reactions that use hydroxyl radicals, we replace hydroxyl
            %  radical with water and hydrogen in reaction stoichiometries.
            %- reactionDNAStoichiometryMatrix: the stoichiometry of DNA bases
            %  in damage reactions
            %- reactionRadiationStoichiometryMatrix: the stoichiometry of
            %  radiation stimuli in damage reactions
            numReactions = length(this.reactionWholeCellModelIDs);
            
            %indices of substrates in reactions that should be considered part
            %of DNA, rather than free metabolites
            substrateIndexs_DNA = [
                this.substrateIndexs_unmodifiedNucleobases;
                this.substrateIndexs_unmodifiedNucleosides;
                this.substrateIndexs_unmodifiedDNMPs;
                this.substrateIndexs_modifiedNucleobases;
                this.substrateIndexs_modifiedNucleosides;
                this.substrateIndexs_modifiedDNMPs;
                this.substrateIndexs_DR5P;
                this.substrateIndexs_dRibose5P_dRibose5P];
            
            %allocate memory
            this.reactionSmallMoleculeStoichiometryMatrix = zeros(size(this.reactionStoichiometryMatrix));
            this.reactionDNAStoichiometryMatrix           = zeros(size(this.reactionStoichiometryMatrix));
            this.reactionRadiationStoichiometryMatrix     = zeros(size(this.reactionStoichiometryMatrix));
            
            %DNA
            this.reactionDNAStoichiometryMatrix(substrateIndexs_DNA, :) = ...
                this.reactionStoichiometryMatrix(substrateIndexs_DNA, :);
            
            [i, j] = find(this.reactionDNAStoichiometryMatrix > 0);
            this.reactionDNAProduct = zeros(numel(this.reactionWholeCellModelIDs), 1);
            this.reactionDNAProduct(j) = this.substrateGlobalIndexs(i);
            
            %radiation
            this.reactionRadiationStoichiometryMatrix(this.substrateIndexs_radiation,:) = ...
                this.reactionStoichiometryMatrix(this.substrateIndexs_radiation, :);
            
            [i, j] = find(this.reactionRadiationStoichiometryMatrix);
            this.reactionRadiation = zeros(numel(this.reactionWholeCellModelIDs), 1);
            this.reactionRadiation(j) = i;
            
            %free metabolites
            this.reactionSmallMoleculeStoichiometryMatrix = ...
                this.reactionStoichiometryMatrix - ...
                this.reactionDNAStoichiometryMatrix - ...
                this.reactionRadiationStoichiometryMatrix;
            
            %radicals
            this.reactionSmallMoleculeStoichiometryMatrix([this.substrateIndexs_water;this.substrateIndexs_hydrogen],:) = ...
                this.reactionSmallMoleculeStoichiometryMatrix([this.substrateIndexs_water;this.substrateIndexs_hydrogen],:) + ...
                repmat([1;-1], 1, numReactions).*repmat(this.reactionSmallMoleculeStoichiometryMatrix(this.substrateIndexs_hydroxylRadical,:),2,1);
            this.reactionSmallMoleculeStoichiometryMatrix(this.substrateIndexs_hydroxylRadical,:) = 0;
            
            %reaction-specific corrections
            this.reactionSmallMoleculeStoichiometryMatrix(this.substrateIndexs_unmodifiedNucleobases,this.reactionIndexs_spontaneousBaseLoss) = ...
                this.reactionStoichiometryMatrix(this.substrateIndexs_unmodifiedNucleobases,this.reactionIndexs_spontaneousBaseLoss);
            this.reactionDNAStoichiometryMatrix(this.substrateIndexs_unmodifiedNucleobases,this.reactionIndexs_spontaneousBaseLoss) = 0;
            
            %% reaction sequences
            % represents the DNA sequence(s) vulnerable to each damage reaction
            this.reactionVulnerableMotifs = repmat({''}, size(this.reactionStoichiometryMatrix,2), 1);
            this.reactionVulnerableMotifTypes = repmat({''}, size(this.reactionStoichiometryMatrix,2), 1);
            
            for i = 1:length(this.reactionWholeCellModelIDs)
                dnaSubstrateLocalIdx = find(this.reactionDNAStoichiometryMatrix(:, i) < 0);
                if this.reactionDNAStoichiometryMatrix(dnaSubstrateLocalIdx, i) ~= -1; continue; end;
                
                [~, baseIdx] = ismember(dnaSubstrateLocalIdx, [this.substrateIndexs_unmodifiedNucleobases; this.substrateIndexs_unmodifiedNucleosides; this.substrateIndexs_unmodifiedDNMPs]);
                if baseIdx
                    this.reactionVulnerableMotifs{i} = this.unmodifiedNucleobases(mod(baseIdx - 1,4) + 1);
                    this.reactionVulnerableMotifTypes{i} = 'sequence';
                else
                    this.reactionVulnerableMotifs{i} = this.substrateGlobalIndexs(dnaSubstrateLocalIdx);
                    this.reactionVulnerableMotifTypes{i} = this.reactionDamageTypes{i};
                end
            end
            
            this.reactionVulnerableMotifs(this.reactionIndexs_strandBreak) = {true};
            this.reactionVulnerableMotifTypes(this.reactionIndexs_strandBreak) = {'abasicSites'};
            
            this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_CSNCSN_cyclobutane_CSNCSN_UVB_radiation'})}  = 'sequence';
            this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_THYTHY_cyclobutane_THYTHY_UVB_radiation'})}  = 'sequence';
            this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_CSNTHY_cyclobutane_CSNTHY_UVB_radiation'})}  = 'sequence';
            this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_THYCSN_cyclobutane_THYCSN_UVB_radiation'})}  = 'sequence';
            this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_CSNTHY_CSN64THY_UVB_radiation'})}            = 'sequence';
            %this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_CSNCSN_CSN64CSN_UVB_radiation'})}            = 'sequence';
            this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_THYCSN_THY64CSN_UVB_radiation'})}            = 'sequence';
            this.reactionVulnerableMotifTypes{this.reactionIndexs({'DNADamage_THYTHY_THY64THY_UVB_radiation'})}            = 'sequence';
            
            this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_CSNCSN_cyclobutane_CSNCSN_UVB_radiation'})}  = 'CC';
            this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_THYTHY_cyclobutane_THYTHY_UVB_radiation'})}  = 'TT';
            this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_CSNTHY_cyclobutane_CSNTHY_UVB_radiation'})}  = 'CT';
            this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_THYCSN_cyclobutane_THYCSN_UVB_radiation'})}  = 'TC';
            this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_CSNTHY_CSN64THY_UVB_radiation'})}            = 'CT';
            %this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_CSNCSN_CSN64CSN_UVB_radiation'})}            = 'CC';
            this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_THYCSN_THY64CSN_UVB_radiation'})}            = 'TC';
            this.reactionVulnerableMotifs{this.reactionIndexs({'DNADamage_THYTHY_THY64THY_UVB_radiation'})}            = 'TT';
            
            %% reaction rates
            this.reactionBounds(:, 1) = 0;
        end
    end
    
    %model
    methods
        %Calculate
        %- contribution to FBA objective
        %- minimum expression consistent with cell cycle length
        function [bmProd, byProd, minEnzExp, maxEnzExp] = calcResourceRequirements_LifeCycle(this, constants, ~)
            %substrate and byproducts: metabolic effects of damage reactions
            rates = this.calcExpectedReactionRates() * (...
                + constants.states.Time.cellCycleLength + ...
                + 0.5 * constants.states.Time.replicationDuration ...
                + constants.states.Time.cytokinesisDuration);
            bmProd = max(0, -this.reactionSmallMoleculeStoichiometryMatrix) * rates;
            byProd = max(0,  this.reactionSmallMoleculeStoichiometryMatrix) * rates;
            
            %no enzymes involved in DNA damage
            minEnzExp = zeros(size(this.enzymeWholeCellModelIDs));
            maxEnzExp = Inf(size(this.enzymeWholeCellModelIDs));
        end
        
        %initialization -- simulation initializeState initializes 1 undamaged
        %chromosome (except methylation at restriction/modification sites which
        %is initialized by DNA repair)
        function initializeState(~)
        end
        
        %resource requirements
        function result = calcResourceRequirements_Current(this)
            %metabolic effects of reactions
            result = max(0, -this.reactionSmallMoleculeStoichiometryMatrix * this.calcExpectedReactionRates());
        end
        
        function rates = calcExpectedReactionRates(this)
            %number of sites vulnerable to reaction
            nVulnerableSites = this.calcNumberVulnerableSites();
            
            %calculate rate, product of
            %- number of vulnerable site / chromosome
            %- integrated number of chromosomes over cell cycle
            %- reaction rate per vulnerable site (and per unit radiation
            %  for applicable reactions)
            %- amount of radition, for applicable reactions
            rates = nVulnerableSites .* this.reactionBounds(:, 2);
            rates(this.reactionRadiation ~= 0) = ...
                rates(this.reactionRadiation ~= 0) .* ...
                this.substrates(this.reactionRadiation(this.reactionRadiation ~= 0));
        end
        
        function nVulnerableSites = calcNumberVulnerableSites(this)
            c = this.chromosome;
            polDNA = collapse(c.polymerizedRegions);
            bases = 'ACGT';
            dntpComposition = [
                1 - c.sequenceGCContent;
                c.sequenceGCContent;
                c.sequenceGCContent;
                1 - c.sequenceGCContent] / 2;
            [posStrnds, dmg] = find(c.damagedSites); %safely ignores m6AD because this process doesn't produce or modify m6AD; this is asserted in testConstants in unit test
            
            nVulnerableSites = zeros(size(this.reactionStoichiometryMatrix, 2), 1);
            for i = 1:size(this.reactionStoichiometryMatrix, 2)
                %% damage would be to undamaged sequence
                if ischar(this.reactionVulnerableMotifs{i})
                    nVulnerableSites(i) = polDNA * prod(dntpComposition(ismembc2(this.reactionVulnerableMotifs{i}, bases)));
                    continue;
                end
                
                %% damage would be to already damaged sequence
                if isempty(posStrnds)
                    continue;
                end
                
                [spcPosStrmds, spcDmg] = find(c.(this.reactionVulnerableMotifTypes{i}));
                if isempty(spcPosStrmds)
                    continue;
                end
                
                spcIdxs = find(spcDmg == this.reactionVulnerableMotifs{i});
                if isempty(spcIdxs)
                    continue;
                end
                
                idxs = find(dmg == this.reactionVulnerableMotifs{i});
                if isempty(idxs)
                    continue;
                end
                
                nVulnerableSites(i) = sum(edu.stanford.covert.util.SparseMat.ismember_subs(...
                    spcPosStrmds(spcIdxs, :), posStrnds(idxs, :), [c.sequenceLen c.nCompartments]));
            end
        end
        
        %simulation
        function evolveState(this)
            %loop over reactions in random order
            randomOrder = this.randStream.randperm(numel(this.reactionWholeCellModelIDs));
            for i = 1:length(this.reactionWholeCellModelIDs)
                j = randomOrder(i);
                
                %maximum number of reactions, based on substrate availability
                maxReactions = floor(min(this.substrates ./ max(0, -this.reactionSmallMoleculeStoichiometryMatrix(:, j))));
                if maxReactions <= 0
                    continue;
                end
                
                % probability that valid site undergoes reaction
                radiationLclIdx  = this.reactionRadiation(j);
                if radiationLclIdx ~= 0
                    selectionProbability = this.stepSizeSec * this.reactionBounds(j, 2) * this.substrates(radiationLclIdx);
                else
                    selectionProbability = this.stepSizeSec * this.reactionBounds(j, 2);
                end
                if selectionProbability == 0
                    continue;
                end
                
                %randomly damage sites
                [positionsStrands, sideEffects] = this.chromosome.setSiteDamaged(...
                    this.reactionDamageTypes{j}, this.reactionDNAProduct(j), selectionProbability, ...
                    maxReactions, this.reactionVulnerableMotifs{j}, this.reactionVulnerableMotifTypes{j});
                if isempty(positionsStrands)
                    continue;
                end
                
                % use small molecule reactants, produce small molecule products
                this.substrates = this.substrates + ...
                    size(positionsStrands, 1) * this.reactionSmallMoleculeStoichiometryMatrix(:,j);
                
                %side effects
                if ~isempty(sideEffects)
                    this.simulationStateSideEffects = [this.simulationStateSideEffects; sideEffects];
                end
            end
        end
    end
end